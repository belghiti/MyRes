[{"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\index.js":"1","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\App.js":"2","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\reportWebVitals.js":"3","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\store\\reducers\\appReducer.js":"4","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\components\\Login.js":"5","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\store\\reducers\\authReducer.js":"6"},{"size":713,"mtime":1614541563000,"results":"7","hashOfConfig":"8"},{"size":8054,"mtime":1615677213991,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1614541563000,"results":"10","hashOfConfig":"8"},{"size":170,"mtime":1614541563000,"results":"11","hashOfConfig":"8"},{"size":3413,"mtime":1614541563000,"results":"12","hashOfConfig":"8"},{"size":491,"mtime":1614541563000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cdzb0l",{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\index.js",[],["29","30"],"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\App.js",["31","32","33","34","35","36"],"import   React ,  { Component }from 'react';\nimport moment from 'moment';\nimport './App.css';\nimport Login from \"./components/Login\"\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n        all_Product : [],\n        product_cat : [],\n        cart : [],\n        Total : 0,\n        user : '',\n        order_id:\"\"\n    }\n    const dt = moment().format(\"DD/MM/YYYY HH:mm:ss\")\n    console.log(\"date now : \",dt)\n   console.log(this.props.user)\n}\n\n  get_Category_Product = () => {\n    return axios.get('http://localhost:3001/api/productCategory').then( data => {\n\n        this.setState({\n            all_Product : data.data\n        })\n    }) \n  }\n\n  get_Product = (category) => {\n    if(this.props.user !== null) {\n    return axios.get(`http://localhost:3001/api/product/${this.props.user.worksAt[0].id}/${category}`).then(data => {\n\n      this.setState({\n        product_cat : data.data\n      })\n    })\n  }\n  }\n\n  add_Cart = (product_id,name_product,price,quantity=1) => {\n    let allReadyExist = false\n    if(this.state.cart.length === 0){\n      this.setState({\n        cart : [\n          {\n          product_id: product_id,\n          name : name_product,\n          price : price,\n          quantity : quantity\n          }],\n          Total:price\n      })\n    }\n    else {\n      const newCart = this.state.cart.map((item)=>{\n\n        if(item.name === name_product){\n         \n          item.quantity++\n          allReadyExist = true\n          return item\n        } else {\n          return item\n        }\n      \n          \n        \n      })\n     \n      if(allReadyExist == false){\n        this.setState({\n          cart: [\n            ...this.state.cart,\n            {\n              product_id:product_id,\n              name :name_product,\n              price : price,\n             quantity : quantity\n            }\n          ]\n        })\n   \n      }\n      else {\n        this.setState({\n          cart : newCart\n        })\n      }\n    }\n \n  }\n\n  total = () => {\n    const total = this.state.cart.reduce((sum,total)=>sum = sum + total.quantity * total.price,0)\n    this.setState({\n      Total : total\n    })\n  }\n\n  minus = (name) => {\n    let toDeleteFromCart\n\n    let minusProduct = this.state.cart.map((item)=>{\n      if(item.name===name){\n        if(item.quantity===1) {\n          toDeleteFromCart = item\n        } else {\n            item.quantity--\n            return item\n        }\n      } else {\n        return item\n      }\n    })\n\n    if(toDeleteFromCart){\n      minusProduct = this.state.cart.filter(product=> product.name !== toDeleteFromCart.name)\n    }\n\n    this.setState({\n      cart : minusProduct\n    })\n    \n  }\n\n  deleteFromCart = (name) => {\n    let toDeleteFromCart\n\n    let deleteProduct = this.state.cart.map((item)=>{\n      if(item.name===name){\n       \n          toDeleteFromCart = item\n          return item\n      } else {\n        return item\n      }\n    })\n\n    if(toDeleteFromCart){\n      deleteProduct = this.state.cart.filter(product=> product.name !== toDeleteFromCart.name)\n    }\n\n    this.setState({\n      cart : deleteProduct\n    })\n  }\n\n  // Add new order\n  \n  add_New_Order = () => {\n    axios.post(\"http://localhost:3001/api/order/add\",{ \n      user_id : this.props.user._id,\n      date : moment().format(\"DD-MM-YYYY\"),\n      total : this.state.Total,\n      products : this.state.cart\n    }).then((data) => {\n      console.log(\"Data Order is send : \", data)\n     \n      this.setState({\n        cart : [],\n        Total : 0\n      })\n\n    })\n  }\n\n\n  componentDidMount = ()  => {\n    if(this.props.user) {\n      this.setState({\n        user : this.props.user._id\n      })\n    }\n    this.get_Category_Product()\n  }\n componentDidUpdate = (prevProps,prevState) => {\n\n    if(prevState.cart !== this.state.cart) {\n\n       this.total()\n    }\n\n  }\n  render() {\n    const {token, user} = this.props \n   \n   \n    //console.log(user.worksAt[0].id)\n    const nameCatProducte = (this.state.all_Product !== undefined ) ? this.state.all_Product.map((item,index)=>{\n      return <a href=\"#\"  className=\"list-group-item list-group-item-action \" key={index} onClick= {()=>this.get_Product(item._id)}> {item.name}</a> \n     \n  }) : <div></div>\n\n  const product_category = (this.state.product_cat !== undefined) ? this.state.product_cat.map((item,index)=>{\n    console.log(item._id,\" : \",item.name,\" : \",item.productImage)\n    //{item.productImage}\n    return  <div key={index} className=\"col-md-4\">\n                <div className=\"card\">\n                    <div className=\"img-container\">\n                        <div className=\"d-flex justify-content-between align-items-center p-2 first\"> \n                          <span className=\"wishlist\"><i className=\"fa fa-heart\"></i></span> \n                        \n                          <img src={(item.productImage !== undefined) ? 'http://localhost:3001/'+ item.productImage : \"https://www.anonymapparel.com/wp-content/plugins/woocommerce/assets/images/placeholder.png\"} className=\"img-fluid\"></img>\n                        </div> \n                    \n                    </div>\n                    <div className=\"product-detail-container\">\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <h6 className=\"mb-0\">{item.name}</h6> \n                            <span className=\"text-danger font-weight-bold\">{item.price} - MAD</span>\n                        </div>\n                        <div className=\"d-flex justify-content-between align-items-center mt-2\">\n                            \n                        </div>\n                        <div className=\"mt-3\"> \n                          <button onClick={()=>this.add_Cart(item._id,item.name,item.price,item.quantity)} className=\"btn btn-primary btn-block\">Ajouter</button> \n                        </div>\n                    </div>\n                      \n                </div>\n              \n            </div>\n            \n\n  \n    \n}) : <div>Not yet</div>\n\nconst displayCart = (this.state.cart !== undefined  || this.state.cart.quantity !== undefined ) ? this.state.cart.map((item,index)=>{\n  return <div key={index}>\n    <li >\n    {item.quantity} * {item.name} = {item.quantity*item.price} MAD {\" \"}\n    <button className=\"btn btn-danger\" onClick={()=>this.deleteFromCart(item.name)}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n    {\"  \"}\n  <button className=\"btn btn-secondary\" onClick={()=>this.minus(item.name)}><i className=\"fa fa-minus\"></i>  </button>\n    \n  </li> \n  \n    </div>\n}) : <div>Not yet</div>\n\nconst total = this.state.cart.reduce((sum,total)=>sum = sum + total.quantity * total.price,0)\n\n  return (\n    <div>\n    {this.props.user !== null  ? (\n     <div className=\"row\">\n      <div className=\"col-sm-2 \">\n        <div className=\"position-fixed\">\n           <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\n           <div className=\"list-group list-group-flush\">\n             {nameCatProducte}\n       \n          \n            \n            \n              \n         \n            \n            </div>\n          </div>\n        </div>\n        \n      </div>\n      <div className=\"col-sm-7\">\n      <div className=\"container-fluid mt-3 mb-3\">\n        <div className=\"row g-2\">\n          {product_category}\n        </div>\n        </div>\n          \n        \n      </div>\n      <div className=\"col-sm-3\">\n        <div className=\"position-fixed\">\n            <ul>\n                {displayCart} \n                <li> <strong>Total : {total}</strong> </li>\n            </ul>\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\n                <button type=\"button\" onClick={()=>this.add_New_Order()} className=\"btn btn-success\">Valider</button>\n            </div>\n        </div>\n      </div>\n      \n    </div>\n    \n    ) :  ( <Login/> ) \n  }\n  </div>\n  );\n\n}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      token: state.auth.token,\n      user: state.auth.user\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\reportWebVitals.js",[],"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\store\\reducers\\appReducer.js",[],"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\components\\Login.js",[],"D:\\MyRes-master\\MyRes-master\\front\\desktop\\src\\store\\reducers\\authReducer.js",[],["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":76,"column":24,"nodeType":"45","messageId":"46","endLine":76,"endColumn":26},{"ruleId":"47","severity":1,"message":"48","line":109,"column":50,"nodeType":"49","messageId":"50","endLine":109,"endColumn":52},{"ruleId":"51","severity":1,"message":"52","line":191,"column":12,"nodeType":"53","messageId":"54","endLine":191,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":191,"column":19,"nodeType":"53","messageId":"54","endLine":191,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":196,"column":14,"nodeType":"58","endLine":196,"endColumn":133},{"ruleId":"59","severity":1,"message":"60","line":209,"column":27,"nodeType":"58","endLine":209,"endColumn":235},{"ruleId":"39","replacedBy":"61"},{"ruleId":"41","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["63"],["64"],"no-global-assign","no-unsafe-negation"]